[
  {
    "Method": "DefaultHandler",
    "Signature": "void AIFunction_DefaultHandler()",
    "Description": "Handles default AI behavior."
  },
  {
    "Method": "GetAlarmAccess",
    "Signature": "int AIFunction_GetAlarmAccess()",
    "Description": "Gets the access level for an alarm system."
  },
  {
    "Method": "GetAlarmControlStatus",
    "Signature": "int AIFunction_GetAlarmControlStatus()",
    "Description": "Gets the current status of the alarm control system."
  },
  {
    "Method": "GetAlarmTriggerDistance",
    "Signature": "int AIFunction_GetAlarmTriggerDistance()",
    "Description": "Gets the trigger distance for alarm activation."
  },
  {
    "Method": "GetAlarmTriggerID",
    "Signature": "int AIFunction_GetAlarmTriggerID()",
    "Description": "Gets the ID of the alarm trigger."
  },
  {
    "Method": "GetCurrentEventType",
    "Parameter Values": "AIEVENT_ENEMYDETECTION, AIEVENT_GRENADETHROWN, AIEVENT_ALERT, AIEVENT_DEAD, AIEVENT_GROUNDIMPACT, AIEVENT_FLASHBANG, AIEVENT_GRENADELAND, AIEVENT_DOOR, AIEVENT_FENCE, AIEVENT_EXPLOSION, AIEVENT_ALARMON, AIEVENT_ALARMOFF, AIEVENT_GUNSHOTMISS, AIEVENT_FRIENDLYDETECTION, AIEVENT_IDLE, AIEVENT_COMBAT, AIEVENT_CREATE, AIEVENT_ANIMATION, AIEVENT_LADDER, AIEVENT_WALK, AIEVENT_GUNSHOT, AIEVENT_TAKINGDAMAGE",
    "Signature": "int AIFunction_GetCurrentEventType()",
    "Description": "Gets the current AI event type."
  },
  {
    "Method": "GetEventDistance",
    "Signature": "int AIFunction_GetEventDistance()",
    "Description": "Gets the distance to the current AI event."
  },
  {
    "Method": "GetGunnerID",
    "Signature": "int AIFunction_GetGunnerID()",
    "Description": "Gets the ID of the AI gunner."
  },
  {
    "Method": "GetGunnerStatus",
    "Signature": "int AIFunction_GetGunnerStatus()",
    "Description": "Gets the status of the AI gunner."
  },
  {
    "Method": "GetRandomValue",
    "Signature": "float AIFunction_GetRandomValue(int)",
    "Description": "Generates a random value based on the provided seed."
  },
  {
    "Method": "GetScriptIntegerValue",
    "Signature": "int AIFunction_GetScriptIntegerValue(int)",
    "Description": "Gets an integer value from the AI script based on the provided index."
  },
  {
    "Method": "GetScriptRealValue",
    "Signature": "float AIFunction_GetScriptRealValue(int)",
    "Description": "Gets a real (floating-point) value from the AI script based on the provided index."
  },
  {
    "Method": "IsEventBehind",
    "Signature": "void AIFunction_IsEventBehind()",
    "Description": "Checks if the current AI event is behind the AI character's perspective."
  },
  {
    "Method": "RemoveAlarmActions",
    "Signature": "void AIFunction_RemoveAlarmActions()",
    "Description": "Removes all actions associated with the alarm system."
  },
  {
    "Method": "SendResponse",
    "Signature": "void AIFunction_SendResponse()",
    "Description": "Sends a response to the current AI event."
  },
  {
    "Method": "SetAlarmAccess",
    "Parameter Values": "AIALARMACCESS_AFTERCOMBAT, AIALARMACCESS_BEFORECOMBAT",
    "Signature": "void AIFunction_SetAlarmAccess(int)",
    "Description": "Sets the access level for the alarm system."
  },
  {
    "Method": "SetAlarmControlID",
    "Signature": "void AIFunction_SetAlarmControlID(int)",
    "Description": "Sets the ID of the alarm control system."
  },
  {
    "Method": "SetAlarmTriggerID",
    "Signature": "void AIFunction_SetAlarmTriggerID(int)",
    "Description": "Sets the ID of the alarm trigger."
  },
  {
    "Method": "SetAlarmViewLength",
    "Signature": "void AIFunction_SetAlarmViewLength(int)",
    "Description": "Sets the view length for alarm activation."
  },
  {
    "Method": "SetDeathAnimation",
    "Signature": "void AIFunction_SetDeathAnimation(int)",
    "Description": "Sets the death animation for the AI character."
  },
  {
    "Method": "SetEventPriority",
    "Parameter Values": "AIEVENT_ENEMYDETECTION, AIEVENT_IDLE, AIEVENT_COMBAT, AIEVENT_GRENADETHROWN, AIEVENT_ALERT, AIEVENT_ANIMATION, AIEVENT_CREATE, AIEVENT_DEAD, AIEVENT_GROUNDIMPACT, AIEVENT_FLASHBANG, AIEVENT_GRENADELAND, AIEVENT_DOOR, AIEVENT_FENCE, AIEVENT_GUNSHOT, AIEVENT_WALK, AIEVENT_EXPLOSION, AIEVENT_ALARMON, AIEVENT_ALARMOFF, AIEVENT_GUNSHOTMISS, AIEVENT_TAKINGDAMAGE",
    "Signature": "void AIFunction_SetEventPriority(int)",
    "Description": "Sets the priority for handling AI events."
  },
  {
    "Method": "SetGunnerID",
    "Signature": "void AIFunction_SetGunnerID(int)",
    "Description": "Sets the ID of the AI gunner."
  },
  {
    "Method": "SetInstantDeath",
    "Signature": "void AIFunction_SetInstantDeath(bool)",
    "Description": "Enables or disables instant death behavior for the AI character."
  },
  {
    "Method": "SetInvulnerability",
    "Signature": "void AIFunction_SetInvulnerability(bool)",
    "Description": "Makes the AI character invulnerable or vulnerable to damage."
  },
  {
    "Method": "SetScriptIntegerValue",
    "Signature": "void AIFunction_SetScriptIntegerValue(int,int)",
    "Description": "Sets an integer value in the AI script based on the provided index."
  },
  {
    "Method": "SetScriptRealValue",
    "Signature": "void AIFunction_SetScriptRealValue(int,int)",
    "Description": "Sets a real value in the AI script based on the provided index."
  },
  {
    "Method": "SetViewAlpha",
    "Signature": "void AIFunction_SetViewAlpha(int)",
    "Description": "Sets the alpha value for the AI character's view."
  },
  {
    "Method": "SetViewGamma",
    "Signature": "void AIFunction_SetViewGamma(int)",
    "Description": "Sets the gamma value for the AI character's view."
  },
  {
    "Method": "SetViewLength",
    "Signature": "void AIFunction_SetViewLength(int)",
    "Description": "Sets the view length for the AI character."
  },
  {
    "Method": "GetAnimationToPlay",
    "Signature": "void AIFunction_GetAnimationToPlay()",
    "Description": "Gets the animation to play based on the current AI context."
  }
]